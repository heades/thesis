% Godel's system T.
metavar term_var, x, y, z, f, u, v, w ::=

grammar

type, T  :: 'Type_' ::=
  | Nat     ::   :: Base
    {{ tex \mathsf{Nat} }}
  | T -> T' ::   :: Arrow
   {{ tex [[T]] \to [[T']] }}
  | ( T )   :: S :: Parens  

term, t :: 'Term_' ::= 
  | x              ::   :: Variables
  | 0              ::   :: Zero
  | S              ::   :: Succ
   {{ tex \mathsf{S} }}
  | \ x : T . t    ::   :: Lam (+ bind x in t +)
    {{ tex \lambda [[x]] : [[T]] . [[t]] }}
  | t1 t2          ::   :: App
  | R              ::   :: Rec
    {{ tex \mathsf{R} }}
  | [ t / x ] t'   :: M :: Substitution
  | add t1 t2      :: M :: Add
  | mult t1 t2     :: M :: Mult
  | exp t1 t2      :: M :: Exp
  | pred t         :: M :: Pred
  | 1              :: M :: 1
  | 2              :: M :: 2
  | 3              :: M :: 3
  | 4              :: M :: 4
  | 5              :: M :: 5
  | 6              :: M :: 6
  | ( t )          :: S :: Parens

G {{ tex \Gamma }} :: 'Context_' ::=
  | x : T       :: :: Element
  | .           :: :: Empty
  | G , G'      :: :: Extension

formula :: 'formula_' ::=
  | judgement              ::  :: judgement
  | ( formula )            ::  :: parens

defns
  JTyping :: '' ::=
  defn
  G |- t : T :: :: typing :: '' 
    {{ tex [[G]] \vdash [[t]] : [[T]] }}
  by
  
  --------------------- :: Var
  G, x : T, G' |- x : T

  ------------ :: Zero
  G |- 0 : Nat

  ------------------- :: Succ
  G |- S : Nat -> Nat

  ----------------------------------------------- :: Rec
  G |- R : T -> ((T -> (Nat -> T)) -> (Nat -> T))

  G, x : T1 |- t : T2
  ----------------------- :: Lam
  G |- \x:T1.t : T1 -> T2

  G |- t1 : T1 -> T2
  G |- t2 : T1
  ------------------ :: App
  G |- t1 t2 : T2

defns
 Opsem :: '' ::=
 defn
 t ~> t' :: :: red :: 'R_'
   {{tex [[t]] \redto [[t']] }}
 by
  
  ----------------------- :: Beta
  (\x : T . t) t' ~> [t'/x]t  

  --------------- :: RecBase
  R t1 t2 0 ~> t1

  ------------------------------------ :: RecStep  
  R t1 t2 (S t3) ~> t2 (R t1 t2 t3) t3

  t1 ~> t'1
  ------------------------- :: RecCong1
  R t1 t2 t3 ~> R t'1 t2 t3

  t2 ~> t'2
  ------------------------- :: RecCong2
  R t1 t2 t3 ~> R t1 t'2 t3

  t3 ~> t'3
  ------------------------- :: RecCong3
  R t1 t2 t3 ~> R t1 t2 t'3

  t ~> t'
  ----------------- :: Lam
  \x:T.t ~> \x:T.t'

  t1 ~> t'1
  --------------- :: App1
  t1 t2 ~> t'1 t2

  t2 ~> t'2
  --------------- :: App2
  t1 t2 ~> t1 t'2
 
  t ~> t'
  ----------- :: Succ
  S t ~> S t'